{"version":3,"sources":["components/Messages.js","components/Chat.js","components/CreateMessage.js","App.js","index.js"],"names":["Messages","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getStyle","user","backgroundColor","state","backgroundChatColor","overflowY","opacity","determineVisualContent","content","scroll","length","simmerRegExp","RegExp","splitContent","split","react_default","a","createElement","ref","vidRef","onLoadedMetadata","scrollToBottomVideo","controls","autoplay","src","alt","youtubeURL","replace","width","height","frameborder","allow","allowfullscreen","test","simmerURL","exec","style","border","console","log","twitchURL","scrolling","hoverOn","chatRef","hoverOff","scrollToBottom","scrollIntoView","behavior","block","_this2","onMouseEnter","onMouseLeave","chatItems","message","Component","Chat","setState","chatMessages","map","components_Messages","key","id","CreateMessage","onChange","e","target","value","onSubmit","preventDefault","createMessage","class","type","autocomplete","placeholder","className","openpgp","path","localStorage","publicKey","privateKey","pass","cryptoArray","Uint32Array","window","crypto","getRandomValues","toString","options","userIds","name","email","numBits","passphrase","then","setItem","privateKeyArmored","publicKeyArmored","App","socketConnection","stream","socket","socketIOClient","connect","concat","toConsumableArray","on","data","createPeer","initiator","peer","emit","signal","initiaitorSocketId","socketid","submitButton","next","destroy","peerInfo","inConvo","navigator","mediaDevices","getUserMedia","video","audio","catch","err","Peer","trickle","code","send","JSON","stringify","isPublicKey","peerPublicKey","_ref","asyncToGenerator","regenerator_default","mark","_callee","privKey","_options","wrap","_context","prev","parse","sessionStorage","readArmored","sent","keys","decrypt","t0","t1","privateKeys","plaintext","newMessage","stop","_x","apply","arguments","peerStream","peerRef","srcObject","onloaddedmetadata","play","_ref2","_callee2","_context2","fromText","publicKeys","ciphertext","_x2","_x3","backgroundImage","imgUrl","prompt","bgColorOne","bgColorTwo","charAt","hexRegExp","match","clientRef","forceUpdate","info","_this3","href","onClick","findUsers","muted","components_Chat","submit","components_CreateMessage","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2a97a9c4.chunk.js","sourcesContent":["//Test files\r\n//https://files.catbox.moe/v71b50.jpg\r\n//https://files.catbox.moe/d0sb20.mp4\r\n//https://www.twitch.tv/monstercat\r\n//<iframe src=\"https://c.simmer.io/static/unityFrame/index.html?url=https%3A%2F%2Fsimmercdn.com%2Funity%2FkZGYHWMk1uQmFY7ll8nbCnz7ojm2%2Fcontent%2F98e8ae1c-0ce9-1a32-b4ff-7d2e654d9242&imagePath=screens/1.png\" style=\"width:960px;height:600px;border:0\"></iframe>\r\n//http://regexr.com/4f2iu\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport $ from 'jquery';\r\n\r\n\r\nclass Messages extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            backgroundChatColor: this.props.backgroundChatColor,\r\n        }\r\n\r\n    }    \r\n\r\n    getStyle = (user) => {\r\n        if( user === \"You\" ) {\r\n            return {backgroundColor : this.state.backgroundChatColor[0], overflowY: \"auto\", opacity: .75 }\r\n\r\n        } else {\r\n                return {backgroundColor : this.state.backgroundChatColor[1], overflowY: \"auto\", opacity: .75 }\r\n            }\r\n        }\r\n    \r\n    determineVisualContent = (content, scroll) => {\r\n        if(typeof content == 'undefined' || typeof content == null) {\r\n            return null;\r\n        } else if (content.length <= 0) {\r\n            return null;\r\n        }\r\n\r\n        var simmerRegExp = new RegExp(/(https:\\/\\/c\\.simmer\\.io\\/static\\/unityFrame\\/index\\.html\\?url=https)([^a-z]+)(simmercdn.com%2Funity%2F)([a-zA-Z0-9]{28})(%2Fcontent%2F)([a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}&imagePath=screens\\/[a-zA-Z0-9]{1}.png)/);\r\n        var splitContent = content.split('/');\r\n        if(splitContent[2] === \"files.catbox.moe\" || splitContent[2] === \"i.imgur.com\") {\r\n            splitContent = splitContent[3].split(\".\");\r\n            if(splitContent[1] == \"mp4\" || splitContent[1] == \"webm\" || splitContent[1] == \"avi\" || splitContent[1] == \"ogg\" || splitContent[1] == \"mpeg\") { \r\n                //ref = {vidRef => {this.vidRef = vidRef }}\r\n                return (\r\n                <div ><br /><video ref = {vidRef => {this.vidRef = vidRef }} onLoadedMetadata = {this.scrollToBottomVideo} controls autoplay> <source src={content} ></source></video> </div>\r\n                )\r\n            } else if(splitContent[1] == \"jpg\" || splitContent[1] == \"jpeg\" || splitContent[1] == \"png\" || splitContent[1] == \"gif\")  {\r\n                return <div ><br /><img src = {content} alt=\"User Content\" /></div>                \r\n            } else {\r\n                return null;\r\n            }\r\n        } else if((splitContent[2] === \"www.youtube.com\" || splitContent[2] === \"youtube.com\" || splitContent[2] === \"youtu.be\" || splitContent[2] === \"www.youtu.be\")) {            \r\n            const regexp = /^.*(watch\\?v=)/;\r\n            \r\n            var youtubeURL = \"https://youtube.com/embed/\" + splitContent[3].replace(regexp, '');\r\n            return (\r\n                \r\n                <div><iframe width=\"560\" height=\"315\" src={youtubeURL} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\r\n            )\r\n        } else if (simmerRegExp.test(content)) {\r\n                var simmerURL = simmerRegExp.exec(content)[0];\r\n                return (\r\n                    <div><iframe src= { simmerURL } style= {{ width:960, height:540, border:0 }}></iframe> <br /></div>\r\n                )\r\n        } else if(splitContent[2] === \"www.twitch.tv\" || splitContent[2] === \"twitch.tv\") {\r\n            console.log(splitContent[3]);\r\n            var twitchURL = \"https://player.twitch.tv/?channel=\" + splitContent[3];\r\n\r\n            return (<div><br /><iframe src= {twitchURL} frameborder=\"0\" allowfullscreen=\"true\" scrolling=\"no\" height=\"378\" width=\"620\"></iframe></div>)\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.scrollToBottom();\r\n        //this.scrollToBottomVideo();\r\n      }\r\n    \r\n    componentDidUpdate() {\r\n        this.scrollToBottom();\r\n        //this.scrollToBottomVideo();\r\n      }\r\n\r\n      hoverOn = () => {\r\n          //this.setState({opacity: 1});\r\n          this.chatRef.style.opacity = 1; // this.state.opacity;\r\n      }\r\n\r\n      hoverOff = () => {\r\n          //this.setState({opacity: .75});\r\n          this.chatRef.style.opacity = .75; // this.state.opacity;\r\n      }\r\n\r\n    scrollToBottom = () =>  \r\n        {  \r\n            this.chatRef.scrollIntoView({behavior: 'smooth', block: \"start\"}); \r\n        }\r\n    scrollToBottomVideo = () => \r\n    {\r\n        this.vidRef.scrollIntoView({behavior: 'smooth', block: \"start\"})\r\n    }\r\n\r\n  render() {    \r\n    return (\r\n        <div onMouseEnter = {this.hoverOn} onMouseLeave = {this.hoverOff} style = {this.getStyle(this.props.chatItems.user)} ref = {chatRef => {this.chatRef = chatRef }}> \r\n            {this.props.chatItems.user + \": \" + this.props.chatItems.message}\r\n            {this.determineVisualContent(this.props.chatItems.message)}\r\n        </div>\r\n        \r\n    )\r\n  };\r\n}\r\n\r\nMessages.propTypes = {\r\n    chatItems: PropTypes.object.isRequired,\r\n}\r\n\r\n\r\nexport default Messages;\r\n","import React, { Component } from 'react';\r\nimport Messages from './Messages';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Chat extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n        backgroundChatColor: this.props.backgroundChatColor\r\n    }\r\n\r\n}   \r\n\r\n componentDidUpdate () {\r\n   if(this.state.backgroundChatColor != this.props.backgroundChatColor) {\r\n     this.setState({backgroundChatColor: this.props.backgroundChatColor})\r\n   }\r\n }\r\n\r\n  render() {    \r\n\r\n    return (\r\n        this.props.chatMessages.map(chatItems => (\r\n            <Messages backgroundChatColor = {this.state.backgroundChatColor} key = {chatItems.id} chatItems = {chatItems}/>\r\n        \r\n     ))\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nChat.propTypes = {\r\n    chatMessages: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Chat;","import React, { Component } from 'react';\r\n\r\nclass CreateMessage extends Component {\r\n\r\n    state = {\r\n        content: ''\r\n    }\r\n\r\n    onChange = (e) => this.setState({content: e.target.value}); \r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createMessage(\"You\", this.state.content);\r\n        this.setState({content: '', user: 'You' })\r\n    }\r\n  render() {    \r\n\r\n    return (\r\n\t\r\n\t\t\t  \r\n    \r\n        \r\n    \r\n    \r\n        \r\n    \r\n\r\n\t<div class=\"input-area\">\r\n            <form  id=\"input\" class=\"flex\" onSubmit = {this.onSubmit}>\r\n\t\t\t\t<div class=\"input-area\">\r\n\t\t\t\t\t<input class=\"textarea\" type=\"text\" autocomplete=\"nope\" placeholder=\"Type Message Here...\" value={this.state.content} onChange={this.onChange} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"action-area\">\r\n\t\t\t\t\t<input type=\"submit\" value=\"Send\" className = \"send\" />\r\n\t\t\t\t</div>\r\n            </form>\r\n\t\t\t</div>\r\n    )\r\n  };\r\n}\r\n\r\n\r\n\r\nexport default CreateMessage;\r\n","//npm run build\r\n\r\nimport React, { Component } from 'react';\r\nimport Chat from './components/Chat';\r\n//import SiteIntro from './components/SiteIntro';\r\nimport CreateMessage from './components/CreateMessage';\r\nimport * as openpgp from 'openpgp';\r\nimport './App.css';\r\nimport Peer from 'simple-peer'; \r\nimport socketIOClient from 'socket.io-client';\r\n//import data from 'emoji-mart/data/messenger.json'\r\n//import { NimblePicker } from 'emoji-mart'\r\n//import $ from 'jquery';\r\n\r\n\r\nopenpgp.initWorker({path: './dist/openpgp.worker.min.js'}); \r\n\r\nif(typeof localStorage.publicKey == 'undefined' || typeof localStorage.privateKey == 'undefined' || typeof localStorage.pass == 'undefined') {\r\n\r\n  var cryptoArray = new Uint32Array(4);\r\n  window.crypto.getRandomValues(cryptoArray);\r\n  localStorage.pass = cryptoArray[2].toString()\r\n  var options = {\r\n    userIds: [{name: cryptoArray[3].toString(), email: cryptoArray[0] + '@' + cryptoArray[1] + '.com' }],\r\n    numBits: 2048,\r\n    passphrase: localStorage.pass\r\n  }\r\n\r\n  openpgp.generateKey(options).then(function(key) {\r\n  localStorage.setItem('privateKey', key.privateKeyArmored);\r\n  localStorage.setItem('publicKey', key.publicKeyArmored);\r\n\r\n  })\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chatMessages: [ \r\n      ],\r\n      peerInfo: null,\r\n      stream: null,\r\n      peer: null,\r\n      inConvo: false,\r\n      backgroundImage: '',\r\n      backgroundChatColor: ['#FFDAB9', '#FFD700']\r\n    }\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    navigator.mediaDevices.getUserMedia({video:true, audio: true}).then(stream => {\r\n      this.clientRef.srcObject = stream;\r\n      this.clientRef.onloaddedmetadata = this.clientRef.play();\r\n      this.forceUpdate();\r\n    }).catch((err) => {\r\n      navigator.mediaDevices.getUserMedia({video:false, audio: false}).then(stream => {\r\n        this.forceUpdate();\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidCatch(err, info) {\r\n    console.log(err);\r\n    console.log(info);\r\n  }\r\n\r\n  componentDidUpdate( ) {\r\n    console.log(this.state.backgroundChatColor);\r\n  }\r\n\r\n  socketConnection = (stream) => {\r\n    var socket = socketIOClient.connect(\"merkroulette2.herokuapp.com\");   \r\n    this.setState({chatMessages: [...this.state.chatMessages, {id: this.state.chatMessages.length, user: \"Client\", message:\"Connecting to Server...\"}]})\r\n    socket.on('peer', (data) => {\r\n      this.createPeer(data.initiator, stream);\r\n      \r\n      console.log(\"Server told client to become initiator: \" + data.initiator);\r\n      if(data.initiator) {\r\n        this.state.peer.on(\"signal\", (data) => {\r\n          socket.emit(\"initiatorData\", data);\r\n          this.setState({chatMessages: [...this.state.chatMessages, {id: this.state.chatMessages.length, user: \"Client\", message:\"Emitting Initiator data to Server...\"}]})\r\n        })\r\n      }\r\n    });\r\n\r\n      socket.on('joinInitiator', (data) => {\r\n        this.setState({chatMessages: [...this.state.chatMessages, {id: this.state.chatMessages.length, user: \"Client\", message:\"Joining Initiator...\"}]})\r\n        this.state.peer.signal(data.data);\r\n \r\n\r\n        if(!data.initiator) {\r\n          var initiaitorSocketId = data.socketid;\r\n          this.state.peer.on('signal', (data) => {\r\n            socket.emit(\"backToInitiator\", {socketid: initiaitorSocketId, data: data});\r\n            this.setState({chatMessages: [...this.state.chatMessages, {id: this.state.chatMessages.length, user: \"Client\", message:\"Recieving Initiator's Data...\"}]})\r\n          })\r\n        }\r\n      })\r\n\r\n      socket.on('toInitiatorFromServer', (data) => {\r\n       \r\n          this.state.peer.signal(data.data);  \r\n          this.setState({chatMessages: [...this.state.chatMessages, {id: this.state.chatMessages.length, user: \"Client\", message:\"Connecting to Peer...\"}]})\r\n      })\r\n  }\r\n\r\n  submitButton = () => {\r\n    console.log(\"Can Submit\")\r\n  }\r\n\r\n  next = () => {\r\n    this.setState({chatMessages: [...this.state.chatMessages, {id: this.state.chatMessages.length, user: \"Client\", message:\"Finding User...\"}]})\r\n    if(this.state.peer != null && typeof this.state.peer != 'undefined') {\r\n        this.state.peer.destroy();\r\n        this.setState({\r\n          chatMessages: [ \r\n          ],\r\n          peerInfo: null,\r\n          stream: null,\r\n          peer: null,\r\n          inConvo: false,\r\n        });\r\n      }\r\n          navigator.mediaDevices.getUserMedia({video:true, audio: true}).then(stream => {\r\n            this.socketConnection(stream);\r\n          }).catch((err) => { this.socketConnection(false)})\r\n  }\r\n\r\n  //Needs to be finished\r\n  createPeer = (initiator, stream) => {\r\n  var peer = new Peer({initiator: initiator, trickle: false, stream: stream});\r\n\r\n  this.setState({inConvo: true});\r\n  \r\n    peer.on(\"error\", (err) => {\r\n      this.setState({chatMessages: [{id: this.state.chatMessages.length, user: \"Client\", message:  err.code + \" Error. Try clicking next, or refreshing if problem persists\"}]});\r\n    })\r\n\r\n    peer.on(\"connect\", () => {\r\n        peer.send(JSON.stringify({isPublicKey: true, peerPublicKey: localStorage.publicKey}))\r\n        this.setState({chatMessages: []});\r\n    })\r\n\r\n    peer.on(\"data\", async (data) => {\r\n      data = JSON.parse(data);\r\n\r\n      if(data.isPublicKey === true) {\r\n        sessionStorage.setItem(\"peerPublicKey\", data.peerPublicKey);\r\n        this.setState({chatMessages: [{id: this.state.chatMessages.length, user: \"Client\", message:\"You can now send messages!\"}]});\r\n\r\n      } else {\r\n\r\n        let privKey = ( await openpgp.key.readArmored(localStorage.privateKey)).keys[0];\r\n        await privKey.decrypt(localStorage.pass);\r\n\r\n        let options = {\r\n          message: await openpgp.message.readArmored(data.data),\r\n          privateKeys: [privKey]\r\n        }\r\n\r\n        openpgp.decrypt(options).then( (plaintext) => {\r\n          let newMessage = {\r\n            id: this.state.chatMessages.length,\r\n            user: data.user,\r\n            message: plaintext.data \r\n          }\r\n\r\n          this.setState({chatMessages: [...this.state.chatMessages, newMessage]});\r\n        })\r\n      }\r\n    });\r\n\r\n    peer.on(\"stream\", (data) => {\r\n      this.setState({peerStream: data});\r\n      this.peerRef.srcObject = this.state.peerStream;\r\n      this.peerRef.onloaddedmetadata = this.peerRef.play();\r\n    });\r\n\r\n    this.setState({peer: peer, inConvo: true});\r\n    return peer;\r\n  }\r\n\r\n\r\n  createMessage = async (user, content) => {\r\n\r\n      const newMessage = {\r\n        id: this.state.chatMessages.length,\r\n        user: user,\r\n        message: content \r\n      }\r\n\r\n      this.setState({chatMessages: [...this.state.chatMessages, newMessage]});\r\n      let data = openpgp.message.fromText(content);\r\n\r\n      let options = {\r\n        message: data,\r\n        publicKeys: ( await openpgp.key.readArmored(sessionStorage.peerPublicKey)).keys,\r\n      }\r\n\r\n      try {\r\n      openpgp.encrypt(options).then( (ciphertext) => {\r\n        let data = ciphertext.data;\r\n        this.state.peer.send(JSON.stringify({user: 'Collega', data: data}));\r\n      });    \r\n    } catch (err) {\r\n      this.setState({chatMessages: [{id: this.state.chatMessages.length, user: \"Client\", message:\"There was an error sending the message...\"}]});\r\n    } \r\n  }\r\n\r\n  backgroundImage = () => {\r\n      var imgUrl = prompt('Please enter Catbox/Imgur image URL: ')\r\n      if(typeof imgUrl == 'string') {\r\n        var splitContent = imgUrl.split('/');\r\n        if(splitContent[2] === \"files.catbox.moe\" || splitContent[2] === \"i.imgur.com\") {\r\n          splitContent = splitContent[3].split(\".\");\r\n          if(splitContent[1] == \"jpg\" || splitContent[1] == \"jpeg\" || splitContent[1] == \"png\" || splitContent[1] == \"gif\")  {\r\n              this.setState({backgroundImage: imgUrl})    \r\n          } else {\r\n              this.setState({backgroundImage: null})\r\n              return null;\r\n          }\r\n        } else {\r\n          this.setState({backgroundImage: null})\r\n          return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  backgroundChatColor = () => {\r\n    var bgColorOne = prompt('Hex Color For You (No Pound Symbol): ')\r\n    var bgColorTwo = prompt('Hex Color For Anon (No Pound Symbol): ')\r\n\r\n    if (bgColorOne.charAt(0) === '#' || bgColorTwo.charAt(0) === '#') {\r\n      return null;\r\n    }\r\n\r\n    var hexRegExp = /^[0-9a-fA-F]+$/;\r\n\r\n    if(bgColorOne.match(hexRegExp) && bgColorTwo.match(hexRegExp)) {\r\n      console.log('Valid hex colors');    \r\n      bgColorOne = '#' + bgColorOne;\r\n      bgColorTwo = '#' + bgColorTwo;\r\n\r\n      this.setState({backgroundChatColor: [bgColorOne, bgColorTwo]});\r\n    } else {\r\n      console.log('Invalid Hex Colors');\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n<header id=\"header\" class=\"flex\"><h1><a href=\"/\"><img height=\"60\" src=\"merkroulette.png\" /></a></h1><ul class=\"control\"><li><button type=\"button\" onClick = {this.next} ref = {findUsers => {this.findUsers = findUsers}}>Connect/Swap</button></li></ul></header>\r\n\t  <div id=\"container\" class=\"flex\">\r\n\t  \r\n\t  <aside id=\"webcam\"><div class=\"partner\"><h2>Partner</h2><video ref = {peerRef => {this.peerRef = peerRef}}></video></div><div class=\"you\"><h2>You</h2><video ref = {clientRef => {this.clientRef = clientRef}} muted></video></div></aside>     \r\n        <div id=\"room\" class=\"flex\">\r\n\t\t<ul id=\"messages\">\r\n          <Chat backgroundChatColor = {this.state.backgroundChatColor} chatMessages = {this.state.chatMessages} submit = {this.submitButton} />\r\n\t\t  </ul>\r\n\t\t  \r\n\t\t  \r\n\t\t  \r\n\t\t  \r\n        \r\n\t\t\t<CreateMessage createMessage =  {this.createMessage} peer = {this.peer} next = {this.next} />\r\n\t\t\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}